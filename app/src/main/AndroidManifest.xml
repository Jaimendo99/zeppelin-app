<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_DATA_SYNC" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_REMOTE_MESSAGING" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS" tools:ignore="ProtectedPermissions" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_CONNECTED_DEVICE"/>
    <uses-permission
        android:name="android.permission.REQUEST_COMPANION_PROFILE_WATCH"
        android:usesPermissionFlags="neverForLocation" />

    <!-- In your phone app's AndroidManifest.xml -->

    <!-- Basic Bluetooth permissions -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />

    <!-- Required for BLE scanning on Android 12 (API 31) and up -->
    <!-- The "neverForLocation" flag is VERY important -->
    <uses-permission
        android:name="android.permission.BLUETOOTH_SCAN"
        android:usesPermissionFlags="neverForLocation" />

    <!-- Required for connecting on Android 12 (API 31) and up -->
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />

    <!--
     Required for BLE scanning on Android 6 (API 23) to 11 (API 30).
     Even though you don't want location, the system requires it.
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

    <!-- Declare that your app uses BLE hardware -->
    <uses-feature
        android:name="android.hardware.bluetooth_le"
        android:required="true" />

    <application
        android:name=".ZeppelinApp"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_focused"
        android:label="Focused"
        android:roundIcon="@mipmap/ic_focused_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.App.Started"
        android:windowSoftInputMode="adjustPan">

        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="${applicationId}.androidx-startup"
            android:exported="false"
            tools:node="merge">
            <meta-data
                android:name="androidx.work.WorkManagerInitializer"
                android:value="androidx.startup"
                tools:node="remove" />
        </provider>

        <activity
            android:name="MainActivity"
            android:exported="true"
            android:theme="@style/Theme.App.Started">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service
            android:name=".service.pushNotifications.NotificationService"
            android:exported="true"
            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name=".service.LiveSessionService"
            android:exported="true"
            android:foregroundServiceType="remoteMessaging"
            android:permission="android.permission.FOREGROUND_SERVICE">
            <intent-filter>
                <action android:name="com.example.zeppelin.action.START_FOREGROUND_SERVICE" />
            </intent-filter>
        </service>

        <service
            android:name=".service.wearCommunication.WearableMessageListenerService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.google.android.gms.wearable.MESSAGE_RECEIVED" />
                <action android:name="com.google.android.gms.wearable.DATA_CHANGED" />
                <action android:name="com.google.android.gms.wearable.CAPABILITY_CHANGED" />
                <!-- Add listener for node events -->
                <action android:name="com.google.android.gms.wearable.NODE_CHANGED" />
                <data android:scheme="wear" android:host="*" android:pathPrefix="/"/>
            </intent-filter>
        </service>

    </application>

</manifest>